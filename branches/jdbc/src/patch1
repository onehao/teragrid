### Eclipse Workspace Patch 1.0
#P jdbc
Index: src/cn/ibm/onehao/dao/impl/UserDaoJdbcImpl.java
===================================================================
--- src/cn/ibm/onehao/dao/impl/UserDaoJdbcImpl.java	(revision 0)
+++ src/cn/ibm/onehao/dao/impl/UserDaoJdbcImpl.java	(revision 0)
@@ -0,0 +1,167 @@
+/**
+ * 
+ */
+package cn.ibm.onehao.dao.impl;
+
+import java.sql.Connection;
+import java.sql.PreparedStatement;
+import java.sql.ResultSet;
+import java.sql.SQLException;
+import java.sql.Statement;
+
+import cn.ibm.onehao.JdbcUtils;
+import cn.ibm.onehao.dao.DaoException;
+import cn.ibm.onehao.dao.UserDao;
+import cn.ibm.onehao.domain.User;
+
+/**
+ * @author onehao
+ *
+ */
+public class UserDaoJdbcImpl implements UserDao {
+
+	/* (non-Javadoc)
+	 * @see cn.ibm.onehao.Dao.UserDao#addUser(cn.ibm.onehao.domain.User)
+	 */
+	@Override
+	public void addUser(User user) {
+		// TODO Auto-generated method stub
+		//模板或策略模式进行优化
+		Connection conn = null;
+		PreparedStatement ps = null;
+		ResultSet rs = null;
+		try {
+			conn = JdbcUtils.getConnection(); //推荐 代码不罗嗦
+			String sql = "insert into user(username,password,groups,birthday,money) values(?,?,?,?,?)";
+			ps = conn.prepareStatement(sql);
+			ps.setString(1, user.getUsername());
+			ps.setString(2, user.getPassword());
+			ps.setString(3, user.getGroups());
+			ps.setDate(4, new java.sql.Date(user.getBirthday().getTime()));
+			ps.setFloat(5, user.getMoney());
+			int i = ps.executeUpdate();
+		} catch(SQLException e){
+			throw new DaoException(e.getMessage(),e);
+		}finally {
+			JdbcUtils.free(rs, ps, conn);
+		}
+	}
+
+	/* (non-Javadoc)
+	 * @see cn.ibm.onehao.Dao.UserDao#getUser(int)
+	 */
+	@Override
+	public User getUser(int userId) {
+		Connection conn = null;
+		PreparedStatement ps = null;
+		ResultSet rs = null;
+		User user = null;
+		try {
+			conn = JdbcUtils.getConnection(); //推荐 代码不罗嗦
+			String sql = "select id, username, password, groups, birthday, money from user where id=?";
+			ps = conn.prepareStatement(sql);
+			ps.setInt(1, userId);
+			rs = ps.executeQuery();
+			while(rs.next()){
+				user = mappingUser(rs);
+			}
+		}catch(SQLException e){
+			throw new DaoException(e.getMessage(),e);
+		}finally {
+			JdbcUtils.free(rs, ps, conn);
+		}
+	return user;
+	}
+
+	/* (non-Javadoc)
+	 * @see cn.ibm.onehao.Dao.UserDao#findUser(java.lang.String, java.lang.String)
+	 */
+	@Override
+	public User findUser(String loginName, String password) {
+		// TODO Auto-generated method stub
+		Connection conn = null;
+		PreparedStatement ps = null;
+		ResultSet rs = null;
+		User user = null;
+		try {
+			conn = JdbcUtils.getConnection(); //推荐 代码不罗嗦
+			String sql = "select id, username, password, groups, birthday, money from user where username=?";
+			ps = conn.prepareStatement(sql);
+			ps.setString(1, loginName);
+			rs = ps.executeQuery();
+			while(rs.next()){
+				user = mappingUser(rs);
+			}
+		}catch(SQLException e){
+			throw new DaoException(e.getMessage(),e);
+		}finally {
+			JdbcUtils.free(rs, ps, conn);
+		}
+	return user;
+	}
+
+	/**
+	 * @param rs
+	 * @return
+	 * @throws SQLException
+	 */
+	private User mappingUser(ResultSet rs) throws SQLException {
+		User user = new User();
+		user.setId(rs.getInt("id"));
+		user.setUsername(rs.getString("username"));
+		user.setPassword(rs.getString("password"));
+		user.setGroups(rs.getString("groups"));
+		user.setBirthday(rs.getDate("birthday"));
+		user.setMoney(rs.getFloat("money"));
+		return user;
+	}
+
+	/* (non-Javadoc)
+	 * @see cn.ibm.onehao.Dao.UserDao#update(cn.ibm.onehao.domain.User)
+	 */
+	@Override
+	public void update(User user) {
+		// TODO Auto-generated method stub
+		Connection conn = null;
+		PreparedStatement  ps = null;
+		ResultSet rs = null;
+		try {
+			conn = JdbcUtils.getConnection(); //推荐 代码不罗嗦
+			String sql = "update user set username=?, password=?, groups=?, birthday=?, money=? where id=?" ;
+			ps = conn.prepareStatement(sql);
+			ps.setString(1, user.getUsername());
+			ps.setString(2, user.getPassword());
+			ps.setString(3, user.getGroups());
+			ps.setDate(4, new java.sql.Date(user.getBirthday().getTime()));
+			ps.setFloat(5, user.getMoney());
+			ps.setInt(6, user.getId());
+			int i = ps.executeUpdate();
+		} catch(SQLException e){
+			throw new DaoException(e.getMessage(),e);
+		}finally {
+			JdbcUtils.free(rs, ps, conn);
+		}
+	}
+
+	/* (non-Javadoc)
+	 * @see cn.ibm.onehao.Dao.UserDao#delete(cn.ibm.onehao.domain.User)
+	 */
+	@Override
+	public void delete(User user) {
+		// TODO Auto-generated method stub
+		Connection conn = null;
+		Statement st = null;
+		ResultSet rs = null;
+		try {
+			conn = JdbcUtils.getConnection(); //推荐 代码不罗嗦
+			st = conn.createStatement();
+			String sql = "delete from user where id=" + user.getId();
+			int i = st.executeUpdate(sql);
+		} catch(SQLException e){
+			throw new DaoException(e.getMessage(),e);
+		}finally {
+			JdbcUtils.free(rs, st, conn);
+		}
+	}
+
+}
Index: src/cn/ibm/onehao/dao/UserDao.java
===================================================================
--- src/cn/ibm/onehao/dao/UserDao.java	(revision 0)
+++ src/cn/ibm/onehao/dao/UserDao.java	(revision 0)
@@ -0,0 +1,23 @@
+/**
+ * 
+ */
+package cn.ibm.onehao.dao;
+
+import cn.ibm.onehao.domain.User;
+
+/**
+ * @author onehao
+ *
+ */
+public interface UserDao {
+	public void addUser(User user);
+	
+	public User getUser(int userId);
+	
+	public User findUser(String loginName,String password);
+	
+	public void update(User user);
+	
+	public void delete(User user);
+	
+}
Index: src/cn/ibm/onehao/dao/DaoFactory.java
===================================================================
--- src/cn/ibm/onehao/dao/DaoFactory.java	(revision 0)
+++ src/cn/ibm/onehao/dao/DaoFactory.java	(revision 0)
@@ -0,0 +1,44 @@
+/**
+ * 
+ */
+package cn.ibm.onehao.dao;
+
+import java.io.File;
+import java.io.FileInputStream;
+import java.io.InputStream;
+import java.util.Properties;
+
+/**
+ * @author onehao
+ *
+ */
+public class DaoFactory {
+	private static UserDao userDao = null;//放在第二位的话会报错 
+	private static DaoFactory instance = new DaoFactory();
+
+	private DaoFactory(){
+		
+		try {
+			Properties prop = new Properties();
+//			InputStream inStream = new FileInputStream(new File("src/daoconfig.properties"));
+			
+			//下面代码不需要写入目录
+			InputStream inStream = DaoFactory.class.getClassLoader().getResourceAsStream("daoconfig.properties");
+			prop.load(inStream);
+			String userDaoClass = prop.getProperty("userDaoClass");
+			Class clazz = Class.forName(userDaoClass);
+			userDao = (UserDao)clazz.newInstance();
+		}catch(Throwable e){
+			// TODO Auto-generated catch block
+			throw new ExceptionInInitializerError(e);
+		}
+	}
+	
+	public static DaoFactory getInstance(){
+		return instance;
+	}
+	
+	public UserDao getUserDao(){
+		return userDao;
+	}
+}
Index: src/cn/ibm/onehao/dao/DaoException.java
===================================================================
--- src/cn/ibm/onehao/dao/DaoException.java	(revision 0)
+++ src/cn/ibm/onehao/dao/DaoException.java	(revision 0)
@@ -0,0 +1,24 @@
+package cn.ibm.onehao.dao;
+
+public class DaoException extends RuntimeException {
+
+	public DaoException() {
+		// TODO Auto-generated constructor stub
+	}
+
+	public DaoException(String message) {
+		super(message);
+		// TODO Auto-generated constructor stub
+	}
+
+	public DaoException(Throwable cause) {
+		super(cause);
+		// TODO Auto-generated constructor stub
+	}
+
+	public DaoException(String message, Throwable cause) {
+		super(message, cause);
+		// TODO Auto-generated constructor stub
+	}
+
+}
Index: src/cn/ibm/onehao/dao/UserDaoTest.java
===================================================================
--- src/cn/ibm/onehao/dao/UserDaoTest.java	(revision 0)
+++ src/cn/ibm/onehao/dao/UserDaoTest.java	(revision 0)
@@ -0,0 +1,44 @@
+/**
+ * 
+ */
+package cn.ibm.onehao.dao;
+
+import java.util.Date;
+
+import cn.ibm.onehao.domain.User;
+
+/**
+ * @author onehao
+ *
+ */
+public class UserDaoTest {
+
+	/**
+	 * @param args
+	 */
+	public static void main(String[] args) {
+		// TODO Auto-generated method stub
+//		UserDao userDao = new UserDaoJdbcImpl();//依赖具体的实现 如果将jdbc换到jpa，hibernate 改动大
+		
+		UserDao userDao = DaoFactory.getInstance().getUserDao() ;
+		User user = new User();
+		user.setBirthday(new Date());
+		user.setUsername("dao name2");
+		user.setPassword("dao pass2");
+		user.setGroups("dao g2");
+		user.setMoney(1000.0f);
+		
+		userDao.addUser(user);
+		
+//		User u = userDao.findUser(user.getUsername(), null);
+//		System.out.println(u.getId());
+		
+//		User u = userDao.getUser(14);
+//		u.setMoney(20000.1f);
+//		userDao.update(u);
+		
+//		User u1 = userDao.getUser(14);
+//		userDao.delete(u1);
+	}
+
+}
